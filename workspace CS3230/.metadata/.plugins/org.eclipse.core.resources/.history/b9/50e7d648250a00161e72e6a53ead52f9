package cardgame;

import java.net.URL;
import java.util.ArrayList;
import java.util.ResourceBundle;
import cardgame.cards.Player;
import javafx.application.Platform;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.AnchorPane;

public class WarNamePlayersController implements Initializable, ControlledScreen {
	ScreensController myController;
	ArrayList<TextField> names;
	boolean readyToSave = false;
	
	@FXML
	AnchorPane CardGameMainAnchorPane;
	
	@FXML
	TextField warName1;
	
	@FXML
	TextField warName2;
	
	@FXML
	Button btn_warStart;
	
	@FXML
	Button btn_warSaveNames;
	
	
	@Override
	public void setScreenParent(ScreensController screenParent){
        myController = screenParent;
    }

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		names = new ArrayList<>();
	}
	
	public void closeProgram(){
		Platform.exit();
	}
	
	public void nameYourPlayers(){
		btn_warStart.setDisable(true);
		btn_warSaveNames.setDisable(false);
		addPlayers();
		// name your players
		// testIfReadyToSave() will be called on every keypress
		for(int i=0; i<Game.blackjackPlayers; i++){
			names.get(i).setText("");
		}
		
		for(int i=0; i<Game.blackjackPlayers; i++){
			names.get(i).setDisable(false);
		}
		
		warName1.requestFocus();
	}
	
	@FXML
	public void disableStartOnKeyPress(KeyEvent event){
		btn_warStart.setDisable(true);
	}
	
	public void useDefaultNames(){
		Game.players.clear();
		
		addPlayers();
		
		for(int i=0; i<Game.blackjackPlayers; i++){
			names.get(i).setText("Player " + (i+1));
			names.get(i).setDisable(true);
		}
		
		saveNames();
		btn_warSaveNames.setDisable(true);
		btn_warStart.setDisable(false);
	}
	
	public void testIfReadyToSave(){
		// once it's ready to save, this method will flip the Save button to not disabled
		// and the save button will instantiate the players and give them names
		
		// .replaceAll("\\s+","") removes white space: spaces, tabs, etc.
		for(int i=0; i<Game.blackjackPlayers; i++){
			if(names.get(i).getText().replaceAll("\\s+","").equals("")){
				readyToSave = false;
				btn_warStart.setDisable(true);
				break;
			}
			else{
				readyToSave = true;
			}
		}
		
		if(readyToSave){
			btn_warSaveNames.setDisable(false);
		}
	}
	
	public void saveNames(){
		Game.players.clear();

		// give the Game.players ArrayList the correct number of players and name them appropriately
		for(int i=0; i<Game.blackjackPlayers; i++){
			Game.players.add(new Player(names.get(i).getText()));
		}
		
		testIfReadyToSave();
		
		if(readyToSave){
			btn_warStart.setDisable(false);
		}
		
	}
	
	public void startWar(){
		myController.setScreen(ScreensFramework.screen7ID);
	}
	
	public void backToMenu(){
		myController.setScreen(ScreensFramework.screen2ID);
	}
	
	public void backToSetup(){
		myController.setScreen(ScreensFramework.screen3ID);
	}
	
	public void addPlayers(){
		// addPlayers() will delete all elements from names arraylist and fill with new names
		// this ensures that pressing the buttons back and forth doesn't add more than just the
		// right amount of players
		
		names.clear();
		
		names.add(0, warName1);
		names.add(1, warName2);
	}
	
	public void disableStartOnKeyPress(){
		//You must press "save" if you want to start the game
		btn_warStart.setDisable(true);
	}
}
